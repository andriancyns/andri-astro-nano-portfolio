---
import { getContentByLang } from '../lib/translations';
import { type Language } from '../i18n';

interface Props {
  slug: string;
  lang: Language;
  originalContent: any; // Content from Astro content collection
}

const { slug, lang, originalContent } = Astro.props;

// Get translated content if available
const translatedContent = getContentByLang(slug, lang, '');

// If we have translation for this language, render it as markdown
// Otherwise, render the original content
---

{translatedContent && lang === 'en' ? (
  <div class="prose prose-lg dark:prose-invert max-w-none" set:html={translatedContent.replace(/\n/g, '<br/>').replace(/```(.*?)```/gs, '<pre><code>$1</code></pre>').replace(/`([^`]+)`/g, '<code>$1</code>')} />
) : (
  <originalContent.Content />
)}

<style>
  .prose {
    line-height: 1.75;
  }
  
  .prose code {
    background-color: #f3f4f6;
    padding: 0.2em 0.4em;
    border-radius: 0.25rem;
    font-size: 0.875em;
  }
  
  .prose pre {
    background-color: #1f2937;
    color: #f9fafb;
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    margin: 1rem 0;
  }
  
  .prose pre code {
    background: none;
    color: inherit;
    padding: 0;
  }
  
  .prose h1, .prose h2, .prose h3, .prose h4 {
    margin-top: 2rem;
    margin-bottom: 1rem;
    font-weight: 600;
  }
  
  .prose ul, .prose ol {
    margin: 1rem 0;
    padding-left: 2rem;
  }
  
  .prose blockquote {
    border-left: 4px solid #e5e7eb;
    padding-left: 1rem;
    margin: 1rem 0;
    font-style: italic;
    color: #6b7280;
  }
  
  .dark .prose code {
    background-color: #374151;
    color: #f9fafb;
  }
  
  .dark .prose blockquote {
    border-left-color: #4b5563;
    color: #9ca3af;
  }
</style>