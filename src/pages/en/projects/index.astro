---
import { type CollectionEntry, getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import ArrowCard from "@components/ArrowCard.astro";
import { getProjectsMetadata } from "@consts";
import { type Language } from "../../../i18n";

const currentLang: Language = 'en';
const PROJECTS = getProjectsMetadata(currentLang);

const data = (await getCollection("projects"))
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  
type Acc = {
  [year: string]: CollectionEntry<"projects">[];
}

const projects = data.reduce((acc: Acc, post) => {
    const year = post.data.date.getFullYear().toString();
    if (!acc[year]) {
      acc[year] = [];
    }
    acc[year].push(post);
    return acc;
  }, {});

const years = Object.keys(projects).sort((a, b) => parseInt(b) - parseInt(a)); 
---

<PageLayout 
  title={PROJECTS.TITLE} 
  description={PROJECTS.DESCRIPTION}
  currentLang={currentLang}
>
  <Container>
    <div class="space-y-10">
      <div class="animate font-semibold text-black dark:text-white">
        Projects
      </div>
      <div class="space-y-4">
        {years.map(year => (
          <section class="animate space-y-4">
            <div class="font-semibold text-black dark:text-white">
              {year}
            </div>
            <div>
              <ul class="flex flex-col gap-4">
                {
                  projects[year].map((project) => (
                    <li>
                      <ArrowCard entry={project} lang={currentLang} basePath="/en"/>
                    </li>
                  ))
                }
              </ul>
            </div>
          </section>
        ))}
      </div>
    </div>
  </Container>
</PageLayout>